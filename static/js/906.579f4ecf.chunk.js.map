{"version":3,"file":"static/js/906.579f4ecf.chunk.js","mappings":"qMACA,QAAyB,2B,aCKzB,MA+CA,EA/CmBA,KACjB,MAAOC,IAAgBC,EAAAA,EAAAA,OAChBC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,OACxCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MA6BnC,OA3BAK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQV,EAAaW,IAAI,UAC/B,GAAKX,GAAiBU,EAStBJ,GAAa,GACbE,EAAS,MACTI,EAAAA,EAAAA,iBAAqBF,GAClBG,MAAKX,IACJC,EAAeD,EAAY,IAE5BY,OAAMP,IACLC,EAASD,GACTJ,EAAe,MACfY,QAAQR,MAAMA,EAAM,IAErBS,SAAQ,KACPV,GAAa,EAAM,QArBvB,CACEH,EAAe,MACf,MAAMc,EAAUC,SAASC,eAAe,oBACpCD,SAASE,gBAAkBH,GAC7BA,EAAQI,OAGZ,CAeI,GACH,CAACrB,KAGFsB,EAAAA,EAAAA,KAAA,WAASC,UAAWC,EAAcC,UAChCC,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAF,SAAA,EACNH,EAAAA,EAAAA,KAACM,EAAAA,GAAU,IACVrB,IAASe,EAAAA,EAAAA,KAACO,EAAAA,GAAU,IACpBxB,IAAcE,GACXe,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,KACPR,EAAAA,EAAAA,KAACS,EAAAA,GAAU,CAACC,OAAQ9B,QAGpB,C","sources":["webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"MoviesPage_movies__IkPVC\"};","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { MoviesList, SearchForm, Container, Loader, FallbackUI } from \"components\";\nimport api from \"services/api\";\nimport css from \"./MoviesPage.module.css\";\n\nconst MoviesPage = () => {\n  const [searchParams] = useSearchParams();\n  const [foundMovies, setFoundMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const query = searchParams.get(\"search\");\n    if (!searchParams || !query) {\n      setFoundMovies(null);\n      const inputEl = document.getElementById(\"searchQueryInput\");\n      if (document.activeElement !== inputEl) {\n        inputEl.focus();\n      }\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    api.getMoviesByTitle(query)\n      .then(foundMovies => {\n        setFoundMovies(foundMovies);\n      })\n      .catch(error => {\n        setError(error);\n        setFoundMovies(null);\n        console.error(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [searchParams]);\n\n  return (\n    <section className={css[\"movies\"]}>\n      <Container>\n          <SearchForm />\n          {error && <FallbackUI />}\n          {isLoading && !error\n            ? <Loader />\n            : <MoviesList movies={foundMovies} />\n          }\n      </Container>\n    </section>\n  );\n};\n\nexport default MoviesPage;"],"names":["MoviesPage","searchParams","useSearchParams","foundMovies","setFoundMovies","useState","isLoading","setIsLoading","error","setError","useEffect","query","get","api","then","catch","console","finally","inputEl","document","getElementById","activeElement","focus","_jsx","className","css","children","_jsxs","Container","SearchForm","FallbackUI","Loader","MoviesList","movies"],"sourceRoot":""}