{"version":3,"file":"static/js/906.5ff9faae.chunk.js","mappings":"qMACA,QAAyB,2B,aCKzB,MAkDA,EAlDmBA,KACjB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,OACjCC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,OACxCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAEnCK,EAAAA,EAAAA,YAAU,KACR,MAkBMC,EAAcX,EAAaY,IAAI,UAChCD,GAnBsBA,KACtBA,IACDJ,GAAa,GACbE,EAAS,MACTI,EAAAA,EAAAA,iBAAqBF,GAClBG,MAAKX,IACJC,EAAeD,EAAY,IAE5BY,OAAMP,IACLC,EAASD,GACTQ,QAAQR,MAAMA,EAAM,IAErBS,SAAQ,KACPV,GAAa,EAAM,IAEzB,EAOFW,CAAkBP,EAAY,GAC7B,CAACX,IAMJ,OACEmB,EAAAA,EAAAA,KAAA,WAASC,UAAWC,EAAcC,UAChCC,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAF,SAAA,EACNH,EAAAA,EAAAA,KAACM,EAAAA,GAAU,CAACC,SAPaf,IAC/BV,EAAgB,CAAC0B,OAAQhB,GAAa,IAO/BH,IAASW,EAAAA,EAAAA,KAACS,EAAAA,GAAU,IACpBtB,GACGa,EAAAA,EAAAA,KAACU,EAAAA,GAAM,KACPV,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CAACC,OAAQ5B,QAGpB,C","sources":["webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"MoviesPage_movies__IkPVC\"};","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { MoviesList, SearchForm, Container, Loader, FallbackUI } from \"components\";\nimport api from \"services/api\";\nimport css from \"./MoviesPage.module.css\";\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [foundMovies, setFoundMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const handleMovieSearch = (searchQuery) => {\n      if(searchQuery) {\n        setIsLoading(true);\n        setError(null);\n        api.getMoviesByTitle(searchQuery)\n          .then(foundMovies => {\n            setFoundMovies(foundMovies);\n          })\n          .catch(error => {\n            setError(error);\n            console.error(error);\n          })\n          .finally(() => {\n            setIsLoading(false);\n          });\n      }\n    }\n    \n    const searchQuery = searchParams.get(\"search\");\n    if (!searchQuery) {\n      return;\n    }\n    handleMovieSearch(searchQuery);\n  }, [searchParams]);\n\n  const handleSearchParamsUpdate = searchQuery => {\n    setSearchParams({search: searchQuery});\n  };\n\n  return (\n    <section className={css[\"movies\"]}>\n      <Container>\n          <SearchForm onSearch={handleSearchParamsUpdate} />\n          {error && <FallbackUI />}\n          {isLoading \n            ? <Loader /> \n            : <MoviesList movies={foundMovies} \n          />}\n      </Container>\n    </section>\n  )\n};\n\nexport default MoviesPage;"],"names":["MoviesPage","searchParams","setSearchParams","useSearchParams","foundMovies","setFoundMovies","useState","isLoading","setIsLoading","error","setError","useEffect","searchQuery","get","api","then","catch","console","finally","handleMovieSearch","_jsx","className","css","children","_jsxs","Container","SearchForm","onSearch","search","FallbackUI","Loader","MoviesList","movies"],"sourceRoot":""}