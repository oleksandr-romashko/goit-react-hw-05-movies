{"version":3,"file":"static/js/42.b758021f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"back-navigation\":\"MovieDetailsPage_back-navigation__hWhsh\",\"back-navigation-link\":\"MovieDetailsPage_back-navigation-link__g7SVH\",\"movie\":\"MovieDetailsPage_movie__ge9gn\",\"details\":\"MovieDetailsPage_details__pkcOH\",\"preview-wrapper\":\"MovieDetailsPage_preview-wrapper__a09Rc\",\"preview-image\":\"MovieDetailsPage_preview-image__YBRHX\",\"description\":\"MovieDetailsPage_description__JSzNh\",\"movie-title\":\"MovieDetailsPage_movie-title__wswFf\",\"movie-subtitle\":\"MovieDetailsPage_movie-subtitle__EvNz9\",\"genres-list\":\"MovieDetailsPage_genres-list__Wf0FC\"};","import { Suspense, useState, useEffect, useRef } from \"react\";\nimport { \n          Link, \n          Outlet, \n          useParams, \n          useLocation, \n          Navigate \n        } from \"react-router-dom\";\nimport { AdditionalInfo, Loader, Container, FallbackUI } from \"components\";\nimport api from \"services/api\";\nimport noImage from \"images/no-image.jpg\";\nimport css from \"./MovieDetailsPage.module.css\";\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? \"/\");\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [shouldNavigateHome, setShouldNavigateHome] = useState(false)\n\n  const [actorCast, setActorCast] = useState(null);\n  const [userReviews, setUserReviews] = useState(null)\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    };\n\n    setIsLoading(true);\n    api.getMovieDetailsById(movieId)\n      .then(movie => {\n        if (movie.adult) {\n          setShouldNavigateHome(true);\n          return;\n        }\n        setMovieDetails(movie);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        console.error(error);\n        setIsLoading(false);\n      });\n  }, [movieId]);\n  \n  /**\n   * Redirects to home page when specific condition met.\n   * \n   * This variant instead of inline navigate(\"/\") of useNavigate hook prevents \n   * parent rerender while using sub routes (as it is necessary to include \n   * navigate as a dependency in useEffect dependencies, \n   * which causes rerenders).\n   */\n  if (shouldNavigateHome) {\n    return <Navigate to=\"/\" />\n  }\n\n  /**\n   * Prevents cases when back link matches current location \n   * and therefore back link does not work.\n   * Occurs when new tab and browser back button being used.\n   */\n  if (location.pathname === backLink.current.pathname) {\n    backLink.current = \"/\";\n  }\n\n  const {\n          title, \n          overview, \n          poster_path, \n          release_date, \n          vote_average, \n          genres\n        } = movieDetails;\n  const releaseYear = release_date && new Date(release_date).getFullYear();\n  const posterUrl = poster_path \n    ? `${api.IMAGE_BASE_URL}${api.IMAGE_POSTER_SIZE}${poster_path}` \n    : noImage;\n\n  return (\n    <>\n      <section className={css[\"back-navigation\"]}>\n        <Container>\n          <Link \n            to={backLink.current}\n            className={css[\"back-navigation-link\"]} \n          >\n            Go back\n          </Link>\n        </Container>\n      </section>\n\n      {isLoading \n        ? <Loader /> \n        : <>\n            <section className={css[\"movie\"]}>\n              <Container>\n                {error && <FallbackUI /> }\n                {!error && movieDetails &&\n                  <div className={css.details}>\n                    <div className={css[\"preview-wrapper\"]}>\n                      <img \n                        className={css[\"preview-image\"]} \n                        src={posterUrl} \n                        alt=\"poster\" \n                        aria-label={`${title} preview`} \n                      />\n                    </div>\n                    <div className={css.description}>\n                      <div>\n                        <h1 className={css[\"movie-title\"]}>\n                          {title} {releaseYear && `(${releaseYear})`}\n                        </h1>\n                        <p>User Score: {Math.trunc(vote_average * 10)}%</p>\n                      </div>\n                      <div>\n                        <h2 className={css[\"movie-subtitle\"]}>Overview</h2>\n                        <p>{overview}</p>\n                      </div>\n                      <div>\n                        <h2 className={css[\"movie-subtitle\"]}>Genres</h2>\n                        <ul className={css[\"genres-list\"]}>\n                          {genres && genres.map(({name})=> (\n                            <li key={name}>\n                              <span>{name}</span>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                }\n              </Container>\n            </section>\n\n            <section>\n              <Container>\n                <AdditionalInfo />\n                <Suspense fallback={<Loader />}>\n                  <Outlet context={\n                      {\n                        cast: [actorCast, setActorCast], \n                        userReviews: [userReviews, setUserReviews], \n                        reviewPage: [page, setPage]\n                      }\n                    } \n                  />\n                </Suspense>\n              </Container>\n            </section>\n        </>\n      }\n    </>\n  )\n};\n\nexport default MovieDetailsPage;"],"names":["MovieDetailsPage","_location$state$from","_location$state","movieId","useParams","location","useLocation","backLink","useRef","state","from","movieDetails","setMovieDetails","useState","isLoading","setIsLoading","error","setError","shouldNavigateHome","setShouldNavigateHome","actorCast","setActorCast","userReviews","setUserReviews","page","setPage","useEffect","api","then","movie","adult","catch","console","_jsx","Navigate","to","pathname","current","title","overview","poster_path","release_date","vote_average","genres","releaseYear","Date","getFullYear","posterUrl","concat","noImage","_jsxs","_Fragment","children","className","css","Container","Link","Loader","FallbackUI","src","alt","Math","trunc","map","_ref","name","AdditionalInfo","Suspense","fallback","Outlet","context","cast","reviewPage"],"sourceRoot":""}